Hello, My name is Hiroshi Igarshi.
Fisrt , please briefly show how I design bookreview tables.

""" Tables """"
First, this is my tables.
I created 3 tables.
users table, books table and bookreviews table.
uesrs table can store user account.
books table has master data of book information.
bookreviews table has comosite key , ISBN and user_id, which are used to uniquely store data of bookreivew .


""" my cocept of data registation """
My basic concept of data registration is performed in 3 steps.
First  ,  uses can input their data in form.
Second ,  uses confirm their input data in the confirmation page.
Finally,  uses are allowed to register data to database.


""" Registration Form """
This is the registration page.
So, as I mentinoned before, first, users need to create thier unique username.
When flask App GET request from users, flask returns registation.html.
Users can input their own data in this registrathi.html.
When users press [Confrim Input Data] button, POST request is sent to Flask App, and returns the data user input with readonly-html.
Users can make sure that their inputted data is ok.
Finally, After users click [Register Your Account] button , input data in POST request is caputured
and make INSERT SQL strings and SQLAlchemy execute INSERT SQL with the data sent by Users.
GET -> registration.html -> POST  registration.html[readonly] -> POST [INSERT -> users table]

Let me show you how it works.
In [registerUser] function , When first, received GET request from client, registraion.html is initialized and return the registration.html file with mode = 0.
Next, After user finishied inputting userdata and press [Confrim Input Data] button,  In [registerUser] function, validate the data sent to Flask app is correct or not.
If the validation is invalid, flask app returns error messages to users.
If the validation is fine, flask app return confirmation page to users.
Finally, In [insertUser] function, the insert query is bulit and executed by SQLAlchemy.


""" Login Form """
This is Login Form .
Users need  to log in this bookreview app to write theri bookreviews
If they don't have their own user account , they need to register their user account.
If users click this link , it takes them to registation form to create their own user account.
(But, first let me show you how this login page works,)

When users input their own account and clikc Log In button, 
Flask recevieves username and password.
The code is here.
In [validate_login] function,
After making sql for select users by using username and passowrd,
the validation is perfomed if the username and password is exactly same as the record in users table.
If the validation is ok, the user recorod is stored in session valiables
and flask take users to  mypage by redirection.

POST ->  validate_login[SELECT <- users] -> userdata -> session -> mypage.html
This is the login form .

""" mypage """"
With Regard to registation page,
Users can see their recent book reviews they wrote and also they can see the recent book reviews written by book review users including the logged-in user.
If users want to write book review, they need to find out the book.
In order to find the book they want to write, they can jump to search page.
Furthermore, I utilized jQuery Datatables and Chart.js to make user-friendly interface.
chart.js => https://www.chartjs.org/
jQuery Datatables => https://datatables.net/


""" search page """
Users can type Booktitle, ISBN, and Author.
According to the typed data, flask app create SQL to find the matched books ,and return the list of the books.
(booklist.html)

""" booklist page(booklist.html) """
After finding the books according to the key word, users can screen the list by using jQuery Datables.
Users can open the book by clicking the view link.

""" write_bookreview.html/edit_bookreview """
Users can write and edit thier book review.
The procedure is the same as the registration.
Once they input bookreview data, flask returns the inputted data with readonly html.
Users can make sure the data , and submit their book review data.


"" API """
http://localhost:5000/bookreivew/api/isbn

http://localhost:5000/bookreivew/api/0380795272

